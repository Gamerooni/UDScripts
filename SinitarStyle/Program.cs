using Mutagen.Bethesda;
using Mutagen.Bethesda.Synthesis;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Plugins.Order;

namespace SinitarStyle
{
    public class Program
    {
        public static Lazy<Settings> _settings = null!;
        public static Settings Settings => _settings.Value;
        public static async Task<int> Main(string[] args)
        {
            return await SynthesisPipeline.Instance
                .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                .SetTypicalOpen(GameRelease.SkyrimSE, "YourPatcher.esp")
                .SetAutogeneratedSettings("Settings", "settings.json", out _settings)
                .Run(args);
        }

        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {
            foreach(var modMatch in Settings.MergeGroups)
            {
                var modMatchOps = new ModMatchOps(modMatch);
                var newLoadOrder = state.LoadOrder.PriorityOrder
                    .Where(mod => modMatchOps.AllMods.Contains(mod.ModKey));

                var newMods = new List<IModListing>();

                foreach(var mod in newLoadOrder)
                {
                    if (modMatchOps.From.Contains(mod.ModKey))
                    {
                        SkyrimMod newMod = new SkyrimMod(mod.ModKey, (SkyrimRelease)state.GameRelease);
                        //newMod.DeepCopyIn();
                    }
                    //newMods.Add(newLoadOrder.master.);
                }

                //foreach(var )
            }
        }
    }
}
